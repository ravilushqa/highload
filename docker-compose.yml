version: "3.7"

x-common-service: &common-service
  build:
    dockerfile: docker/web/Dockerfile
    args:
      SERVICE_PATH: services/web/api
    context: .
  expose:
    - 8080
  networks:
    - otus

x-api-service: &api-service
  build:
    context: .
  restart: on-failure
  networks:
    - otus

services:
  app:
    <<: *common-service
    depends_on:
      - users-api
      - chats-api
      - posts-api
      - posts-daemon
      - counters-api
      - nginx

  app-2:
    <<: *common-service
    depends_on:
      - chats-api
      - posts-api
      - posts-daemon
      - users-api
      - counters-api
      - nginx

  chats-api:
    <<: *api-service
    build:
      args:
        SERVICE_PATH: services/chats/api
    ports:
      - 2345:40000
      - 50051
    depends_on:
      - mongodb
      - redis
    environment:
      MONGO_URL: "mongodb://mongodb:27017"
      REDIS_URL: "redis:6379"
  posts-api:
    <<: *api-service
    build:
      args:
        SERVICE_PATH: services/posts/api
    ports:
      - 50051
    depends_on:
      - redis
      - kafka
      - mongodb
    environment:
      MONGO_URL: "mongodb://mongodb:27017"
      REDIS_URL: "redis://redis:6379"
      KAFKA_BROKERS: "kafka:9092"

  posts-daemon:
    <<: *api-service
    build:
      args:
        SERVICE_PATH: services/posts/daemon
    ports:
      - 2346:40000
    depends_on:
      - redis
      - kafka
      - centrifugo
    environment:
      MONGO_URL: "mongodb://mongodb:27017"
      REDIS_URL: "redis://redis:6379"
      KAFKA_BROKERS: "kafka:9092"

  users-api:
    <<: *api-service
    build:
      args:
        SERVICE_PATH: services/users/api
    ports:
      - 50051
    depends_on:
      - mongodb
    environment:
      MONGO_URL: "mongodb://mongodb:27017"

  counters-api:
    <<: *api-service
    build:
      args:
        SERVICE_PATH: services/counters/api
    ports:
      - 50051
    depends_on:
      - redis
    environment:
      REDIS_URL: "redis://redis:6379"

  mongodb:
    image: mongo:6
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - otus

  prometheus:
    build:
      context: .
      dockerfile: docker/prometheus/Dockerfile
    ports:
      - 9090:9090
    networks:
      - otus

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - otus

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_data_provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - otus

  redis:
    healthcheck:
      interval: 30s
      retries: 3
      test: [ "CMD", "redis-cli","ping" ]
      timeout: 10s
    image: redis:5
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - otus

  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    ports:
      - 2181:2181
    networks:
      - otus

  kafka:
    image: wurstmeister/kafka
    restart: unless-stopped
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "posts_feed:1:1"
    depends_on:
      - zookeeper
    networks:
      - otus

  centrifugo:
    container_name: centrifugo
    image: centrifugo/centrifugo:v2.8.1
    volumes:
      - ./docker/centrifugo/config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    ports:
      - 8000:8000
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - otus

  nginx:
    image: nginx:1.19.0
    container_name: nginx
    restart: on-failure
    networks:
      - otus
    volumes:
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"
      - "4098:8080"

networks:
  otus:
    driver: bridge

volumes:
  mongodb_data:
  grafana_data:
  grafana_data_provisioning:
