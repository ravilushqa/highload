// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: services/counters/api/grpc/api.proto

package grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IncrementUnreadMessageCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	ChatId  int64   `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *IncrementUnreadMessageCounterRequest) Reset() {
	*x = IncrementUnreadMessageCounterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_counters_api_grpc_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementUnreadMessageCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementUnreadMessageCounterRequest) ProtoMessage() {}

func (x *IncrementUnreadMessageCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_counters_api_grpc_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementUnreadMessageCounterRequest.ProtoReflect.Descriptor instead.
func (*IncrementUnreadMessageCounterRequest) Descriptor() ([]byte, []int) {
	return file_services_counters_api_grpc_api_proto_rawDescGZIP(), []int{0}
}

func (x *IncrementUnreadMessageCounterRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *IncrementUnreadMessageCounterRequest) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type DecrementUnreadMessageCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	ChatId  int64   `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *DecrementUnreadMessageCounterRequest) Reset() {
	*x = DecrementUnreadMessageCounterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_counters_api_grpc_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecrementUnreadMessageCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementUnreadMessageCounterRequest) ProtoMessage() {}

func (x *DecrementUnreadMessageCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_counters_api_grpc_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementUnreadMessageCounterRequest.ProtoReflect.Descriptor instead.
func (*DecrementUnreadMessageCounterRequest) Descriptor() ([]byte, []int) {
	return file_services_counters_api_grpc_api_proto_rawDescGZIP(), []int{1}
}

func (x *DecrementUnreadMessageCounterRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *DecrementUnreadMessageCounterRequest) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type UnreadChatsCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChatIds []int64 `protobuf:"varint,2,rep,packed,name=chat_ids,json=chatIds,proto3" json:"chat_ids,omitempty"`
}

func (x *UnreadChatsCountRequest) Reset() {
	*x = UnreadChatsCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_counters_api_grpc_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnreadChatsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadChatsCountRequest) ProtoMessage() {}

func (x *UnreadChatsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_counters_api_grpc_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadChatsCountRequest.ProtoReflect.Descriptor instead.
func (*UnreadChatsCountRequest) Descriptor() ([]byte, []int) {
	return file_services_counters_api_grpc_api_proto_rawDescGZIP(), []int{2}
}

func (x *UnreadChatsCountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnreadChatsCountRequest) GetChatIds() []int64 {
	if x != nil {
		return x.ChatIds
	}
	return nil
}

type UnreadChatsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatsUnreadMessages map[int64]int64 `protobuf:"bytes,3,rep,name=chatsUnreadMessages,proto3" json:"chatsUnreadMessages,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UnreadChatsCountResponse) Reset() {
	*x = UnreadChatsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_counters_api_grpc_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnreadChatsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadChatsCountResponse) ProtoMessage() {}

func (x *UnreadChatsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_counters_api_grpc_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadChatsCountResponse.ProtoReflect.Descriptor instead.
func (*UnreadChatsCountResponse) Descriptor() ([]byte, []int) {
	return file_services_counters_api_grpc_api_proto_rawDescGZIP(), []int{3}
}

func (x *UnreadChatsCountResponse) GetChatsUnreadMessages() map[int64]int64 {
	if x != nil {
		return x.ChatsUnreadMessages
	}
	return nil
}

var File_services_counters_api_grpc_api_proto protoreflect.FileDescriptor

var file_services_counters_api_grpc_api_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a,
	0x24, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x24, 0x44, 0x65, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6d, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63, 0x68, 0x61,
	0x74, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x1a, 0x46, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x74, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xb7, 0x02, 0x0a, 0x08, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x67, 0x0a, 0x1d, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x67,
	0x0a, 0x1d, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x2e, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x10, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x1c, 0x5a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_counters_api_grpc_api_proto_rawDescOnce sync.Once
	file_services_counters_api_grpc_api_proto_rawDescData = file_services_counters_api_grpc_api_proto_rawDesc
)

func file_services_counters_api_grpc_api_proto_rawDescGZIP() []byte {
	file_services_counters_api_grpc_api_proto_rawDescOnce.Do(func() {
		file_services_counters_api_grpc_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_counters_api_grpc_api_proto_rawDescData)
	})
	return file_services_counters_api_grpc_api_proto_rawDescData
}

var file_services_counters_api_grpc_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_services_counters_api_grpc_api_proto_goTypes = []interface{}{
	(*IncrementUnreadMessageCounterRequest)(nil), // 0: counters.IncrementUnreadMessageCounterRequest
	(*DecrementUnreadMessageCounterRequest)(nil), // 1: counters.DecrementUnreadMessageCounterRequest
	(*UnreadChatsCountRequest)(nil),              // 2: counters.UnreadChatsCountRequest
	(*UnreadChatsCountResponse)(nil),             // 3: counters.UnreadChatsCountResponse
	nil,                                          // 4: counters.UnreadChatsCountResponse.ChatsUnreadMessagesEntry
	(*empty.Empty)(nil),                          // 5: google.protobuf.Empty
}
var file_services_counters_api_grpc_api_proto_depIdxs = []int32{
	4, // 0: counters.UnreadChatsCountResponse.chatsUnreadMessages:type_name -> counters.UnreadChatsCountResponse.ChatsUnreadMessagesEntry
	0, // 1: counters.Counters.IncrementUnreadMessageCounter:input_type -> counters.IncrementUnreadMessageCounterRequest
	1, // 2: counters.Counters.DecrementUnreadMessageCounter:input_type -> counters.DecrementUnreadMessageCounterRequest
	2, // 3: counters.Counters.UnreadChatsCount:input_type -> counters.UnreadChatsCountRequest
	5, // 4: counters.Counters.IncrementUnreadMessageCounter:output_type -> google.protobuf.Empty
	5, // 5: counters.Counters.DecrementUnreadMessageCounter:output_type -> google.protobuf.Empty
	3, // 6: counters.Counters.UnreadChatsCount:output_type -> counters.UnreadChatsCountResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_services_counters_api_grpc_api_proto_init() }
func file_services_counters_api_grpc_api_proto_init() {
	if File_services_counters_api_grpc_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_counters_api_grpc_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementUnreadMessageCounterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_counters_api_grpc_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecrementUnreadMessageCounterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_counters_api_grpc_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnreadChatsCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_counters_api_grpc_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnreadChatsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_counters_api_grpc_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_counters_api_grpc_api_proto_goTypes,
		DependencyIndexes: file_services_counters_api_grpc_api_proto_depIdxs,
		MessageInfos:      file_services_counters_api_grpc_api_proto_msgTypes,
	}.Build()
	File_services_counters_api_grpc_api_proto = out.File
	file_services_counters_api_grpc_api_proto_rawDesc = nil
	file_services_counters_api_grpc_api_proto_goTypes = nil
	file_services_counters_api_grpc_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CountersClient is the client API for Counters service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CountersClient interface {
	IncrementUnreadMessageCounter(ctx context.Context, in *IncrementUnreadMessageCounterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DecrementUnreadMessageCounter(ctx context.Context, in *DecrementUnreadMessageCounterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnreadChatsCount(ctx context.Context, in *UnreadChatsCountRequest, opts ...grpc.CallOption) (*UnreadChatsCountResponse, error)
}

type countersClient struct {
	cc grpc.ClientConnInterface
}

func NewCountersClient(cc grpc.ClientConnInterface) CountersClient {
	return &countersClient{cc}
}

func (c *countersClient) IncrementUnreadMessageCounter(ctx context.Context, in *IncrementUnreadMessageCounterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counters.Counters/IncrementUnreadMessageCounter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *countersClient) DecrementUnreadMessageCounter(ctx context.Context, in *DecrementUnreadMessageCounterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counters.Counters/DecrementUnreadMessageCounter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *countersClient) UnreadChatsCount(ctx context.Context, in *UnreadChatsCountRequest, opts ...grpc.CallOption) (*UnreadChatsCountResponse, error) {
	out := new(UnreadChatsCountResponse)
	err := c.cc.Invoke(ctx, "/counters.Counters/UnreadChatsCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CountersServer is the server API for Counters service.
type CountersServer interface {
	IncrementUnreadMessageCounter(context.Context, *IncrementUnreadMessageCounterRequest) (*empty.Empty, error)
	DecrementUnreadMessageCounter(context.Context, *DecrementUnreadMessageCounterRequest) (*empty.Empty, error)
	UnreadChatsCount(context.Context, *UnreadChatsCountRequest) (*UnreadChatsCountResponse, error)
}

// UnimplementedCountersServer can be embedded to have forward compatible implementations.
type UnimplementedCountersServer struct {
}

func (*UnimplementedCountersServer) IncrementUnreadMessageCounter(context.Context, *IncrementUnreadMessageCounterRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncrementUnreadMessageCounter not implemented")
}
func (*UnimplementedCountersServer) DecrementUnreadMessageCounter(context.Context, *DecrementUnreadMessageCounterRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecrementUnreadMessageCounter not implemented")
}
func (*UnimplementedCountersServer) UnreadChatsCount(context.Context, *UnreadChatsCountRequest) (*UnreadChatsCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnreadChatsCount not implemented")
}

func RegisterCountersServer(s *grpc.Server, srv CountersServer) {
	s.RegisterService(&_Counters_serviceDesc, srv)
}

func _Counters_IncrementUnreadMessageCounter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementUnreadMessageCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CountersServer).IncrementUnreadMessageCounter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counters.Counters/IncrementUnreadMessageCounter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CountersServer).IncrementUnreadMessageCounter(ctx, req.(*IncrementUnreadMessageCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Counters_DecrementUnreadMessageCounter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecrementUnreadMessageCounterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CountersServer).DecrementUnreadMessageCounter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counters.Counters/DecrementUnreadMessageCounter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CountersServer).DecrementUnreadMessageCounter(ctx, req.(*DecrementUnreadMessageCounterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Counters_UnreadChatsCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnreadChatsCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CountersServer).UnreadChatsCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counters.Counters/UnreadChatsCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CountersServer).UnreadChatsCount(ctx, req.(*UnreadChatsCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Counters_serviceDesc = grpc.ServiceDesc{
	ServiceName: "counters.Counters",
	HandlerType: (*CountersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IncrementUnreadMessageCounter",
			Handler:    _Counters_IncrementUnreadMessageCounter_Handler,
		},
		{
			MethodName: "DecrementUnreadMessageCounter",
			Handler:    _Counters_DecrementUnreadMessageCounter_Handler,
		},
		{
			MethodName: "UnreadChatsCount",
			Handler:    _Counters_UnreadChatsCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/counters/api/grpc/api.proto",
}
